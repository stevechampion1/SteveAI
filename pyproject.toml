[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "steveai"
dynamic = ["version"]
description = "A comprehensive knowledge distillation framework for large language models"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "SteveAI Team", email = "steveai@example.com"},
]
maintainers = [
    {name = "SteveAI Team", email = "steveai@example.com"},
]
keywords = [
    "machine learning",
    "deep learning", 
    "knowledge distillation",
    "language models",
    "transformer",
    "nlp",
    "ai",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "transformers>=4.21.0",
    "datasets>=2.0.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "tqdm>=4.64.0",
    "psutil>=5.8.0",
    "pyyaml>=6.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "scikit-learn>=1.1.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "flask>=2.0.0",
    "pydantic>=1.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
    "sphinx-autodoc-typehints>=1.12.0",
]
deploy = [
    "gunicorn>=20.0.0",
    "docker>=5.0.0",
    "kubernetes>=18.0.0",
]
all = [
    "steveai[dev,docs,deploy]",
]

[project.urls]
Homepage = "https://github.com/your-username/SteveAI"
Documentation = "https://steveai.readthedocs.io/"
Repository = "https://github.com/your-username/SteveAI.git"
"Bug Tracker" = "https://github.com/your-username/SteveAI/issues"

[project.scripts]
steveai-teacher = "teacher_inference_gpu:main"
steveai-student = "student_training:main"
steveai-evaluate = "evaluate:main"
steveai-benchmark = "benchmark:main"
steveai-optimize = "optimize_model:main"
steveai-deploy = "deploy:main"
steveai-monitor = "monitor_training:main"
steveai-visualize = "visualize_results:main"
steveai-test = "run_tests:main"

[tool.setuptools]
packages = ["steveai"]
include-package-data = true

[tool.setuptools.package-data]
steveai = [
    "config.yaml",
    "*.md",
    "examples/*.py",
]

[tool.setuptools.dynamic]
version = {attr = "steveai.__version__"}

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["steveai"]
known_third_party = ["torch", "transformers", "datasets", "numpy", "pandas"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "datasets.*",
    "torch.*",
    "numpy.*",
    "pandas.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "sklearn.*",
    "fastapi.*",
    "flask.*",
    "uvicorn.*",
    "psutil.*",
    "yaml.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["steveai"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".env",
    "venv",
    "env",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]
